#!/usr/bin/env python3

import sys
import re
import csv

#modify these values for your own purpose or use sys.argv[1] and sys.argv[2]
logfile = "syslog.log"
program_name = "ticky"

def count_error_types(logfile, program_name):
    error_types = {}

    with open(logfile, "r") as f:
        for line in f:
            if program_name not in line:
                continue
            error = re.search(r'(ERROR: \w+.*) \[[#][\d]*\] \(([\w]*)\)', line, re.IGNORECASE)[1]
            if error not in error_types:
                error_types[error] = 1
            else:
                error_types[error] += 1
    f.close()
    return error_types

def sort_errors(error_dic):
    return sorted(error_dic.items(), key=lambda x: x[1], reverse=True)

def sort_by_user(user_dic):
    return sorted(user_dic.items())

def user_stats(logfile, program_name):
    user_info = {}
    with open(logfile, "r") as f:
        for line in f:
            if program_name not in line:
                continue
            username = re.search(r'([\w]*: \w+.*) \[[#][\d]*\] \(([\w]*)\)', line, re.IGNORECASE)[2]
            if username not in user_info:
                user_info[username] = {}
                user_info[username]["error"] = 0
                user_info[username]["info"] = 0
            if "error" in line.lower():
                user_info[username]["error"] += 1
            if "info" in line.lower():
                user_info[username]["info"] += 1
    f.close()
    return user_info

def type_of_errors_csv_generator(sorted_dict_of_errors):
    fields = ['Error', 'Count']
    filename = "error_message.csv"
    with open(filename, "w") as f:
        csvwriter = csv.writer(f)

        csvwriter.writerow(fields)

        csvwriter.writerows(sorted_dict_of_errors)
    f.close()
    return None

def user_stats_csv_generator(sorted_dict_of_user_stats):
    fields = ['Username', 'ERROR', 'INFO']
    filename = "user_statistics.csv"
    with open(filename, "w") as f:
        csvwriter = csv.writer(f)

        csvwriter.writerow(fields)
        for user in sorted_dict_of_user_stats:
            username = user[0]
            error = user[1]["error"]
            info = user[1]["info"]
            csvwriter.writerow([username, error, info])
    f.close()
    return None

if __name__ == "__main__":
    errors = count_error_types(logfile, program_name)
    errors = sort_errors(errors)
    per_user = user_stats(logfile, program_name)
    per_user = sort_by_user(per_user)
    type_of_errors_csv_generator(errors)
    user_stats_csv_generator(per_user)


# Need to change the program and format of the logs jsut a little:
#re.search(r"ticky: [\w]*: ([\w ]*) \[[#][\d]*\] \(([\w]*)\)", line2)[2]
#line = "May 27 11:45:40 ubuntu.local ticky: ERROR: Error creating ticket [#1234] (username)"

    #
    # The ranking of errors generated by the system: A list of all the error messages logged and how many times each error was found, sorted by the most common error to the least common error. This report doesn't take into account the users involved.
    # The user usage statistics for the service: A list of all users that have used the system, including how many info messages and how many error messages they've generated. This report is sorted by username.
